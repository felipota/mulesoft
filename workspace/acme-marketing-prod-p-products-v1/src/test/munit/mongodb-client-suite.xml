<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="mongodb-client-suite.xml" />
	<munit:test name="sf-mongodb-client-products-post-test" doc:id="4d38120d-7343-43b8-8233-2e502aa3e85a" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="0c968c80-0b15-4cab-bd2b-3b435a6c37bf" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fc56dd8d-a5d8-493e-9c5e-0045afa7becb" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://sfmongodbclientproductsposttest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://sfmongodbclientproductsposttest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="notification" value="#[output application/java --- readUrl('classpath://sfmongodbclientproductsposttest\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="a3fdfd7c-2711-44f9-91f1-ee9ee81a2bb8" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://sfmongodbclientproductsposttest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://sfmongodbclientproductsposttest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="notification" value="#[output application/java --- readUrl('classpath://sfmongodbclientproductsposttest\set-event_variable_.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to sf-mongodb-client-products-post" doc:id="7a859243-be0c-4215-8663-a2d38dae6936" name="sf-mongodb-client-products-post"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="84dc266b-e182-4293-921d-109c27760f2b" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import sfmongodbclientproductsposttest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
